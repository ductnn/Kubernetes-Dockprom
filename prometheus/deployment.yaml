apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus
        imagePullPolicy: Always
        args:
          - '--storage.tsdb.retention=6h'
          - '--storage.tsdb.path=/prometheus'
          - '--config.file=/etc/prometheus/prometheus.yml'
        command:
        - /bin/prometheus
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 9090
          protocol: TCP
        volumeMounts:
          - name: prometheus-config-volume
            mountPath: /etc/prometheus
          - name: prometheus-config-volume-rules
            mountPath: /etc/prometheus-rules/
          - name: prometheus-data
            mountPath: /prometheus
      restartPolicy: Always

      volumes:
      - name: prometheus-data
        emptyDir: {}
      - name: prometheus-config-volume
        configMap:
          name: prometheus-config
      - name: prometheus-config-volume-rules
        configMap:
          name: prometheus-config-alert-rules
